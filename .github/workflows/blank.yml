name: Compile and Upload tuic

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  
jobs:
   build:
    name: ${{ matrix.build }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [Linux, macOS, Windows]
        include:
          - build: Linux
            os: ubuntu-latest
            rust: nightly
            target: x86_64-unknown-linux-gnu
          - build: macOS
            os: macos-latest
            rust: nightly
            target: x86_64-apple-darwin
          - build: Windows
            os: windows-latest
            rust: nightly-x86_64-msvc
            target: x86_64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: EAimTY/tuic
          ref: dev
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
          components: rustfmt, clippy
          target: ${{ matrix.target }}
      - name: Clean Windows # Workaround to resolve link error with C:\msys64\mingw64\bin\libclang.dll
        if: runner.os == 'Windows'
        run: |
          Remove-Item -LiteralPath "C:\msys64\" -Force -Recurse
          choco install llvm -y          
      - name: Build binary
        run: |
          cd tuic-server
          cargo build --verbose --release --target ${{ matrix.target }} && cd ..
          cd tuic-client
          cargo build --verbose --release --target ${{ matrix.target }} && cd ..
        env:
          RUST_BACKTRACE: 1
      - name: Build archive
        shell: bash
        run: |
          mkdir archive
          cd archive
          if [ "${{ matrix.build }}" = "Windows" ]; then
            cp "../tuic-server/target/${{ matrix.target }}/release/*.exe" ./
            cp "../tuic-client/target/${{ matrix.target }}/release/*.exe" ./
          else
            cp "../tuic-server/target/${{ matrix.target }}/release/tuic-server" ./
            cp "../tuic-client/target/${{ matrix.target }}/release/tuic-client" ./
          fi          
      - name: Upload archive
        uses: actions/upload-artifact@v1
        with:
          name: tuic-${{ matrix.build }}-${{matrix.target}}
          path: archive/
